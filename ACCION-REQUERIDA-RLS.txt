╔══════════════════════════════════════════════════════════════════════╗
║  🔴 ACCIÓN REQUERIDA - FIX RLS POLICIES EN SUPABASE                 ║
╚══════════════════════════════════════════════════════════════════════╝

📋 RESUMEN DEL PROBLEMA:
═════════════════════════════════════════════════════════════════════

Test realizado: ✅ Usuario creado en auth.users
                ❌ Perfil NO creado (trigger falló)
                ❌ Fallback bloqueado por RLS

Usuario prueba: yeriksonpro301@gmail.com
User ID: adeda623-eb57-4667-829b-7db4c78c922c


🎯 SOLUCIÓN EN 3 PASOS:
═════════════════════════════════════════════════════════════════════

┌─────────────────────────────────────────────────────────────────┐
│ PASO 1: Abrir Supabase SQL Editor                              │
└─────────────────────────────────────────────────────────────────┘

   1. Ve a: https://supabase.com/dashboard
   2. Selecciona proyecto: gerzlzprkarikblqxpjt
   3. Click en: SQL Editor (menú lateral izquierdo)
   4. Click en: "New Query"


┌─────────────────────────────────────────────────────────────────┐
│ PASO 2: Ejecutar SQL Fix                                       │
└─────────────────────────────────────────────────────────────────┘

   Copia y pega este SQL en el editor:

   ┌─────────────────────────────────────────────────────────────┐
   │ -- Eliminar políticas conflictivas                          │
   │ DROP POLICY IF EXISTS "Users can insert own profile"        │
   │   ON public.profiles;                                       │
   │ DROP POLICY IF EXISTS "Users can update own profile"        │
   │   ON public.profiles;                                       │
   │ DROP POLICY IF EXISTS "Users can view own profile"          │
   │   ON public.profiles;                                       │
   │ DROP POLICY IF EXISTS "Public profiles are viewable by..."  │
   │   ON public.profiles;                                       │
   │ DROP POLICY IF EXISTS "Enable insert for authenticated..."  │
   │   ON public.profiles;                                       │
   │ DROP POLICY IF EXISTS "Enable read access for all users"    │
   │   ON public.profiles;                                       │
   │ DROP POLICY IF EXISTS "Enable update for users based..."    │
   │   ON public.profiles;                                       │
   │                                                             │
   │ -- Crear políticas correctas                                │
   │ CREATE POLICY "Users can insert own profile during signup"  │
   │ ON public.profiles                                          │
   │ FOR INSERT                                                  │
   │ WITH CHECK (auth.uid() = id);                               │
   │                                                             │
   │ CREATE POLICY "Profiles are viewable by everyone"           │
   │ ON public.profiles                                          │
   │ FOR SELECT                                                  │
   │ USING (true);                                               │
   │                                                             │
   │ CREATE POLICY "Users can update own profile"                │
   │ ON public.profiles                                          │
   │ FOR UPDATE                                                  │
   │ USING (auth.uid() = id)                                     │
   │ WITH CHECK (auth.uid() = id);                               │
   │                                                             │
   │ CREATE POLICY "Users can delete own profile"                │
   │ ON public.profiles                                          │
   │ FOR DELETE                                                  │
   │ USING (auth.uid() = id);                                    │
   │                                                             │
   │ -- Asegurar RLS habilitado                                  │
   │ ALTER TABLE public.profiles ENABLE ROW LEVEL SECURITY;      │
   └─────────────────────────────────────────────────────────────┘

   📌 Archivo completo disponible en: /sql/fix-rls-profiles.sql

   Luego click en: "RUN" o presiona Ctrl+Enter

   ✅ Resultado esperado:
      "Success. No rows returned"
      (Las políticas se crean sin error)


┌─────────────────────────────────────────────────────────────────┐
│ PASO 3: Verificar Políticas                                    │
└─────────────────────────────────────────────────────────────────┘

   En el mismo SQL Editor, ejecuta:

   ┌─────────────────────────────────────────────────────────────┐
   │ SELECT policyname, cmd, qual, with_check                    │
   │ FROM pg_policies                                            │
   │ WHERE tablename = 'profiles';                               │
   └─────────────────────────────────────────────────────────────┘

   ✅ Deberías ver 4 políticas:
      • Users can insert own profile during signup (INSERT)
      • Profiles are viewable by everyone (SELECT)
      • Users can update own profile (UPDATE)
      • Users can delete own profile (DELETE)


╔══════════════════════════════════════════════════════════════════════╗
║  🧪 TESTING DESPUÉS DEL FIX                                         ║
╚══════════════════════════════════════════════════════════════════════╝

1. Ve a: https://yavlpro.github.io/YavlGold/test-registro-rapido.html

2. Click en "⚡ Auto-rellenar con datos de prueba"

3. Click en "🚀 Crear Cuenta de Prueba"

4. Resultado esperado:
   ✅ Usuario creado en auth.users
   ✅ Perfil creado en public.profiles
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   ✅ REGISTRO EXITOSO


╔══════════════════════════════════════════════════════════════════════╗
║  🧹 LIMPIEZA (OPCIONAL)                                             ║
╚══════════════════════════════════════════════════════════════════════╝

Eliminar usuario de prueba anterior:

1. Supabase Dashboard → Authentication → Users

2. Buscar: yeriksonpro301@gmail.com

3. Click en "..." → "Delete user"

O por SQL:
┌─────────────────────────────────────────────────────────────────┐
│ DELETE FROM auth.users                                          │
│ WHERE email = 'yeriksonpro301@gmail.com';                       │
└─────────────────────────────────────────────────────────────────┘


╔══════════════════════════════════════════════════════════════════════╗
║  📚 DOCUMENTACIÓN COMPLETA                                          ║
╚══════════════════════════════════════════════════════════════════════╝

📄 /docs/FIX-RLS-PROFILES-URGENTE.md
   → Explicación detallada del problema y solución

📄 /sql/fix-rls-profiles.sql
   → SQL completo con comentarios

📄 /docs/VERIFICACION-SISTEMA-REGISTRO.md
   → Análisis completo del sistema de registro


╔══════════════════════════════════════════════════════════════════════╗
║  ❓ ¿NECESITAS AYUDA?                                               ║
╚══════════════════════════════════════════════════════════════════════╝

Si el fix no funciona o tienes dudas:

1. Verifica que el trigger existe:
   SELECT * FROM pg_trigger 
   WHERE tgname = 'create_profile_after_user_insert';

2. Verifica que la función existe:
   SELECT * FROM pg_proc 
   WHERE proname = 'ensure_profile_exists';

3. Si no existen, ejecuta el SQL de SUPABASE-SETUP-INSTRUCTIONS.md


╔══════════════════════════════════════════════════════════════════════╗
║  ✅ CHECKLIST                                                       ║
╚══════════════════════════════════════════════════════════════════════╝

   [ ] Abrir Supabase SQL Editor
   [ ] Ejecutar SQL fix (DROP + CREATE policies)
   [ ] Verificar 4 políticas creadas
   [ ] Probar registro desde test-registro-rapido.html
   [ ] Ver usuario en Authentication → Users
   [ ] Ver perfil en Table Editor → profiles
   [ ] Eliminar usuario de prueba (opcional)
   [ ] Continuar con desarrollo


═════════════════════════════════════════════════════════════════════

Commit: 76a3375
Archivos: sql/fix-rls-profiles.sql, docs/FIX-RLS-PROFILES-URGENTE.md
Estado: ✅ Documentado y listo para aplicar

═════════════════════════════════════════════════════════════════════
